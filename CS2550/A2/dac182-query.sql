/*
    David Cyphert   dac182
    Forbes Turley   [...]
    CS 2550 - Principles of Database Systems
    University of Pittsburgh - Spring 2018
    Due: 2/6/2018
*/

/* List all data */
SELECT * FROM ATHLETE;
SELECT * FROM COUNTRY_TEAM;
SELECT * FROM EVENT;
SELECT * FROM MEMBER;
SELECT * FROM PARTICIPANT;
SELECT * FROM SPORT;
SELECT * FROM SPORT_TEAM;
SELECT * FROM VENUE;
/* END List all data */

/* Question 5 */

/* 5a */
SELECT E.EVENT_NAME 
FROM EVENT E INNER JOIN PARTICIPANT P ON E.event_no = P.event_no
INNER JOIN SPORT_TEAM S ON P.sport_team_no = S.sport_team_no
WHERE S.COUNTRY_TEAM_CODE = 'usa' AND E.START_TIME > TO_DATE('02/15/2018', 'mm/dd/yyyy');

/* 5b */
SELECT V.VENUE_NAME
FROM VENUE V INNER JOIN EVENT E ON V.VENUE_CODE = E.VENUE_CODE
INNER JOIN SPORT S ON E.SPORT_NO = S.SPORT_NO
WHERE UPPER(S.SPORT_NAME) = UPPER('ice hockey');

/* 5c */
SELECT EVENT_NAME FROM EVENT WHERE EVENT_NO NOT IN(
SELECT DISTINCT(E.EVENT_NO) FROM ATHLETE A
INNER JOIN MEMBER M ON A.ATHLETE_NO = M.ATHLETE_NO
INNER JOIN SPORT_TEAM S ON M.SPORT_TEAM_NO = S.SPORT_TEAM_NO
INNER JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
INNER JOIN EVENT E ON P.EVENT_NO = E.EVENT_NO
WHERE A.DOB BETWEEN TO_DATE('03/10/1985', 'mm/dd/yyyy') AND TO_DATE('03/10/1990', 'mm/dd/yyyy'));

/* 5d */
SELECT S1.SPORT_TEAM_NO FROM SPORT_TEAM S1
INNER JOIN PARTICIPANT P1 ON S1.SPORT_TEAM_NO = P1.SPORT_TEAM_NO
WHERE P1.EVENT_NO IN 
(SELECT P2.EVENT_NO FROM SPORT_TEAM S2
INNER JOIN PARTICIPANT P2 ON S2.SPORT_TEAM_NO = P2.SPORT_TEAM_NO
WHERE S2.COUNTRY_TEAM_CODE = 'usa') AND S1.COUNTRY_TEAM_CODE <> 'usa';

/* 5e */
SELECT FULL_NAME, WEIGHT FROM 
(SELECT * FROM ATHLETE ORDER BY WEIGHT DESC)
WHERE ROWNUM <= 3 ;

/* 5f */
SELECT * FROM 
(SELECT TO_CHAR(START_TIME, 'DAY') AS DAY_OF_WEEK, AVG(SPECTATORS_COUNT) AS AVERAGE_SPECTATORS FROM EVENT
WHERE START_TIME BETWEEN TO_DATE('2/10/2018', 'mm/dd/yyyy') AND TO_DATE('2/25/2018', 'mm/dd/yyyy')
GROUP BY TO_CHAR(START_TIME, 'DAY') ORDER BY 2 DESC) WHERE ROWNUM = 1;

/* 5g */
SELECT COUNTRY_NAME, GOLD, SILVER, BRONZE, TOTAL_POINTS, RANK() OVER (ORDER BY TOTAL_POINTS DESC) AS CURRENT_RANK, CURRENT_POINTS, RANK_IN_2014
FROM (SELECT C.COUNTRY_TEAM_CODE, C.COUNTRY_NAME, (

    SELECT COUNT(MEDAL) FROM COUNTRY_TEAM C1
    LEFT JOIN SPORT_TEAM S ON C1.COUNTRY_TEAM_CODE = S.COUNTRY_TEAM_CODE
    LEFT JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
    WHERE MEDAL = 'gold' AND C1.COUNTRY_TEAM_CODE = C.COUNTRY_TEAM_CODE
) AS GOLD,
(
    SELECT COUNT(MEDAL) FROM COUNTRY_TEAM C1
    LEFT JOIN SPORT_TEAM S ON C1.COUNTRY_TEAM_CODE = S.COUNTRY_TEAM_CODE
    LEFT JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
    WHERE MEDAL = 'silver' AND C1.COUNTRY_TEAM_CODE = C.COUNTRY_TEAM_CODE
) AS SILVER,
(
    SELECT COUNT(MEDAL) FROM COUNTRY_TEAM C1
    LEFT JOIN SPORT_TEAM S ON C1.COUNTRY_TEAM_CODE = S.COUNTRY_TEAM_CODE
    LEFT JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
    WHERE MEDAL = 'bronze' AND C1.COUNTRY_TEAM_CODE = C.COUNTRY_TEAM_CODE
) AS BRONZE,
(
    SELECT COUNT(MEDAL) FROM COUNTRY_TEAM C1
    LEFT JOIN SPORT_TEAM S ON C1.COUNTRY_TEAM_CODE = S.COUNTRY_TEAM_CODE
    LEFT JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
    WHERE MEDAL IN ('gold', 'silver', 'bronze') AND C1.COUNTRY_TEAM_CODE = C.COUNTRY_TEAM_CODE
) AS TOTAL_POINTS,
C.CURRENT_POINTS, 
C.RANK_IN_2014
FROM COUNTRY_TEAM C
LEFT JOIN SPORT_TEAM S ON C.COUNTRY_TEAM_CODE = S.COUNTRY_TEAM_CODE
LEFT JOIN PARTICIPANT P ON S.SPORT_TEAM_NO = P.SPORT_TEAM_NO
GROUP BY C.COUNTRY_TEAM_CODE, C.COUNTRY_NAME, C.CURRENT_POINTS, C.RANK_IN_2014)
ORDER BY TOTAL_POINTS DESC;

/* END Question 5 */

/* Question 6 */

alter session set nls_date_format = 'mm/dd/yyyy hh12:mi am';
INSERT INTO EVENT (event_no, event_name, sport_no, venue_code, start_time, spectators_count, percentage) 
VALUES 
(
    EVENT_SEQ.NEXTVAL,
    'Men''s Induvidual Hill',
    (SELECT SPORT_NO FROM SPORT WHERE UPPER(SPORT_NAME) = UPPER('Nordic combined')),
    (SELECT VENUE_CODE FROM VENUE WHERE UPPER(VENUE_NAME) = UPPER('Alpensia Ski Jumping Centre')),
    '02/20/18 07:00 PM', 
    3000, 
    NULL
);

/* END Question 6 */

/* Question 7 */


/* END Question 7 */

/* Question 8 */

alter session set nls_date_format = 'mm/dd/yyyy';
DELETE FROM MEMBER WHERE SPORT_TEAM_NO = 1;
INSERT INTO ATHLETE (athlete_no, full_name, weight, dob) VALUES (ATHLETE_SEQ.NEXTVAL, 'Oyvind Ness', 210, '08/17/1988');

/* END Question 8 */


/* Question 9 */
/* 9a */
CREATE VIEW SPECTATORS_COUNT AS
SELECT S.SPORT_NAME, SUM(E.SPECTATORS_COUNT) AS SPECCOUNT
FROM EVENT E INNER JOIN SPORT S ON E.SPORT_NO = S.SPORT_NO
GROUP BY S.SPORT_NAME

/* 9b */

CREATE MATERIALIZED VIEW  PARTICIPATION_MV
BUILD IMMEDIATE
REFRESH COMPLETE ON DEMAND AS
SELECT A.FULL_NAME, COUNT(P.EVENT_NO) AS COUNTS
FROM ATHLETE A INNER JOIN MEMBER M ON A.ATHLETE_NO = M.ATHLETE_NO
INNER JOIN PARTICIPANT P  ON M.SPORT_TEAM_NO = P.SPORT_TEAM_NO
GROUP BY A.FULL_NAME;

/* END Question 9 */

/* Question 10 */
/* 10a */

SELECT * FROM SPECTATORS_COUNT WHERE ROWNUM <= 3
ORDER BY SPECCOUNT DESC;

/* 10b */

execute DBMS_MVIEW.REFRESH('PARTICIPATION_MV');
SELECT * FROM PARTICIPATION_MV2 WHERE ROWNUM <= 3
ORDER BY COUNTS DESC;

/* 10c */

SELECT PM.FULL_NAME,CT.RANK_IN_2014 FROM PARTICIPATION_MV PM
INNER JOIN ATHLETE A ON PM.FULL_NAME = A.FULL_NAME 
INNER JOIN MEMBER M ON A.ATHLETE_NO = M.ATHLETE_NO
INNER JOIN SPORT_TEAM S ON M.SPORT_TEAM_NO = S.SPORT_TEAM_NO
INNER JOIN COUNTRY_TEAM CT ON S.COUNTRY_TEAM_CODE = CT.COUNTRY_TEAM_CODE
WHERE ROWNUM <=3
ORDER BY COUNTS DESC;

/* 10d */

SELECT P2.SPORT_TEAM_NO FROM PARTICIPANT P2 WHERE P2.EVENT_NO IN 
(SELECT EVENT_NO FROM EVENT E WHERE E.EVENT_NO IN
(SELECT EVENT_NO FROM PARTICIPANT P WHERE P.SPORT_TEAM_NO = 1))
AND P2.SPORT_TEAM_NO != 1;

/* END Question 10 */

/* Question 11 */
/* 11a */
/* 11b */
/* END Question 11 */

/* Question 12 */
/* 12a */
/* 12b */
/* END Question 12 */